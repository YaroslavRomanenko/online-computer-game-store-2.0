name: Build Cross-Platform Installers

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Download and setup JavaFX SDK
      shell: bash 
      run: |
        JFX_VERSION=21.0.2
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          JFX_PLATFORM="win"
          JFX_ARCHIVE_TYPE="zip"
        else
          JFX_PLATFORM="linux"
          JFX_ARCHIVE_TYPE="tar.gz"
        fi
        
        JFX_URL="https://download2.gluonhq.com/openjfx/${JFX_VERSION}/openjfx-${JFX_VERSION}_${JFX_PLATFORM}-x64_bin-sdk.${JFX_ARCHIVE_TYPE}"
        echo "Downloading JavaFX from ${JFX_URL}"
        curl --location --request GET "${JFX_URL}" --header "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36" -o "javafx-sdk.${JFX_ARCHIVE_TYPE}"

        echo "Unpacking JavaFX SDK..."
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          unzip "javafx-sdk.zip"
        else
          tar -xzf "javafx-sdk.tar.gz"
        fi

        echo "JFX_SDK_PATH=${{ github.workspace }}/javafx-sdk-${JFX_VERSION}" >> $GITHUB_ENV

    - name: Build with Maven
      shell: bash 
      run: mvn -B package -Djavafx.sdk.path=${{ env.JFX_SDK_PATH }}/lib

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Installers-${{ matrix.os }}
        path: target/jpackage/
